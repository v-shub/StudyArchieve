{
  "openapi": "3.0.1",
  "info": {
    "title": "Архив заданий прошлых лет API",
    "description": "API для работы с архивом учебных заданий прошлых лет.<br/>Предоставляет возможности поиска, фильтрации и управления заданиями с поддержкой решений и файловых вложений.<br/><br/><b>Ключевые функции:</b><br/>• Поиск по предметам, авторам, тегам<br/>• Множественные решения к заданиям<br/>• Система тегов и категорий<br/>• Поддержка файловых вложений<br/>• Фильтрация по учебным годам",
    "contact": {
      "name": "Поддержка StudyArchieve",
      "url": "https://github.com/v-shub",
      "email": "victoriya.shubina.mex@gmail.com"
    },
    "version": "v1"
  },
  "paths": {
    "/api/AcademicYear": {
      "get": {
        "tags": [
          "AcademicYear"
        ],
        "summary": "Получение списка всех учебных лет",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "AcademicYear"
        ],
        "summary": "Добавление нового учебного года",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n        \"yearLabel\": \"2026-2027\"\r\n    }",
        "requestBody": {
          "description": "Учебный год",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAcademicYearRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAcademicYearRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAcademicYearRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "AcademicYear"
        ],
        "summary": "Изменение существующего учебного года",
        "description": "Пример запроса:\r\n            \r\n    PUT /Todo\r\n    {\r\n        \"id\": 3,\r\n        \"yearLabel\": \"2026-2027\"\r\n    }",
        "requestBody": {
          "description": "Учебный год",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAcademicYearRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAcademicYearRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAcademicYearRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "AcademicYear"
        ],
        "summary": "Удаление существующего учебного года",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id учебного года",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Author": {
      "get": {
        "tags": [
          "Author"
        ],
        "summary": "Получение списка всех авторов заданий",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Author"
        ],
        "summary": "Добавление нового автора заданий",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n        \"name\": \"Ларионов Дмитрий Ильич\"\r\n    }",
        "requestBody": {
          "description": "Автор заданий",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAuthorRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAuthorRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAuthorRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Author"
        ],
        "summary": "Изменение существующего автора заданий",
        "description": "Пример запроса:\r\n            \r\n    PUT /Todo\r\n    {\r\n        \"id\": 1,\r\n        \"name\": \"Ларионов Дмитрий Ильич\"\r\n    }",
        "requestBody": {
          "description": "Автор заданий",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAuthorRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAuthorRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAuthorRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Author"
        ],
        "summary": "Удаление существующего автора заданий",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id автора заданий",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Role": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Получение списка всех пользовательских ролей",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Добавление новой пользовательской роли",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n        \"roleName\": \"Модератор\"\r\n    }",
        "requestBody": {
          "description": "Роль пользователей",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Role"
        ],
        "summary": "Изменение существующей пользовательской роли",
        "description": "Пример запроса:\r\n            \r\n    PUT /Todo\r\n    {\r\n        \"id\": 1,\r\n        \"roleName\": \"Модератор\"\r\n    }",
        "requestBody": {
          "description": "Роль пользователей",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Role"
        ],
        "summary": "Удаление существующей пользовательской роли",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id пользовательской роли",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Solution/task/{taskId}": {
      "get": {
        "tags": [
          "Solution"
        ],
        "summary": "Получение списка решений по id задания",
        "description": "Пример запроса:\r\n            \r\n    GET /Todo\r\n    {\r\n       \"taskId\" : 3\r\n    }",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Id задания",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Solution/{id}": {
      "get": {
        "tags": [
          "Solution"
        ],
        "summary": "Получение решения по его id",
        "description": "Пример запроса:\r\n            \r\n    GET /Todo\r\n    {\r\n       \"id\" : 3\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id решения",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Solution": {
      "post": {
        "tags": [
          "Solution"
        ],
        "summary": "Добавление нового решения",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n        \"taskId\": 2,\r\n        \"solutionText\": \"Решения нет, это задача-подвох\",\r\n        \"userAddedId\": 1\r\n    }",
        "requestBody": {
          "description": "Решение",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSolutionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSolutionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSolutionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Solution"
        ],
        "summary": "Изменение существующего решения",
        "description": "Пример запроса:\r\n            \r\n    PUT /Todo\r\n    {\r\n        \"id\": 1,\r\n        \"solutionText\": \"Решения нет, это задача-подвох\"\r\n    }",
        "requestBody": {
          "description": "Решение",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSolutionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSolutionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSolutionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Solution"
        ],
        "summary": "Удаление существующего решения",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id решения",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SolutionFile/upload": {
      "post": {
        "tags": [
          "SolutionFile"
        ],
        "summary": "Выгрузка на сервер нового файла решения",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n        \"taskId\": 1,\r\n        \"file\": \"[бинарные данные файла]\"\r\n    }",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "SolutionId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "File": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "SolutionId": {
                  "style": "form"
                },
                "File": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UploadSolutionFileResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadSolutionFileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadSolutionFileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SolutionFile/solution/{solutionId}": {
      "get": {
        "tags": [
          "SolutionFile"
        ],
        "summary": "Получение списка файлов по id решения",
        "parameters": [
          {
            "name": "solutionId",
            "in": "path",
            "description": "Id решения",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SolutionFileResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SolutionFileResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SolutionFileResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SolutionFile/{id}": {
      "get": {
        "tags": [
          "SolutionFile"
        ],
        "summary": "Получение файла решения по его id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id файла решения",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SolutionFileResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SolutionFileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SolutionFileResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SolutionFile"
        ],
        "summary": "Удаление существующего файла решения по его id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id файла решения",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SolutionFile/{id}/download": {
      "get": {
        "tags": [
          "SolutionFile"
        ],
        "summary": "Загрузка файла решения с сервера",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id файла решения",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Subject": {
      "get": {
        "tags": [
          "Subject"
        ],
        "summary": "Получение списка всех учебных дисциплин",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Subject"
        ],
        "summary": "Добавление новой учебной дисциплины",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n        \"name\": \"Дискретная математика\"\r\n    }",
        "requestBody": {
          "description": "Учебная дисциплина",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubjectRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubjectRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Subject"
        ],
        "summary": "Изменение существующей учебной дисциплины",
        "description": "Пример запроса:\r\n            \r\n    PUT /Todo\r\n    {\r\n        \"id\": 1,\r\n        \"name\": \"Теория вероятностей\"\r\n    }",
        "requestBody": {
          "description": "Учебная дисциплина",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubjectRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubjectRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Subject"
        ],
        "summary": "Удаление существующей учебной дисциплины",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id учебной дисциплины",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Tag": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Получение списка всех тэгов",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Tag"
        ],
        "summary": "Добавление нового тэга",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n        \"name\": \"MS SQL Server\"\r\n    }",
        "requestBody": {
          "description": "Тэг",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTagRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTagRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTagRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Tag"
        ],
        "summary": "Изменение существующего тэга",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n        \"id\": 3,\r\n        \"name\": \"Regex\"\r\n    }",
        "requestBody": {
          "description": "Тэг",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTagRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTagRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTagRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Tag"
        ],
        "summary": "Удаление существующего тэга",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id тэга",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Task": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Получение списка заданий по условию",
        "description": "Пример запроса:\r\n            \r\n    GET /Todo\r\n    {\r\n       \"subjectId\" : 3,\r\n       \"academicYearId\" : 2,\r\n       \"typeId\" : 1,\r\n       \"authorIds\" : [1, 2],\r\n       \"tagIds\" : [2, 4, 5]\r\n    }",
        "parameters": [
          {
            "name": "subjectId",
            "in": "query",
            "description": "Id учебной дисциплины",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "academicYearId",
            "in": "query",
            "description": "Id учебного года",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "typeId",
            "in": "query",
            "description": "Id типа задания",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "authorIds",
            "in": "query",
            "description": "Набор id авторов задания",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "tagIds",
            "in": "query",
            "description": "Набор id тэгов",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Добавление нового задания",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n        \"title\": \"Новое задание\",\r\n        \"conditionText\": \"Содержание задания\",\r\n        \"subjectId\" : 3,\r\n        \"academicYearId\" : 2,\r\n        \"typeId\" : 1,\r\n        \"userAddedId\": 1,\r\n        \"authorIds\" : [2,5],\r\n        \"tagIds\": [1,3]\r\n    }",
        "requestBody": {
          "description": "Задание",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Изменение существующего задания",
        "description": "Пример запроса:\r\n            \r\n    PUT /Todo\r\n    {\r\n        \"id\": 1,\r\n        \"title\": \"Новое задание\",\r\n        \"conditionText\": \"Содержание задания\",\r\n        \"subjectId\" : 3,\r\n        \"academicYearId\" : 2,\r\n        \"typeId\" : 1,\r\n        \"authorIds\" : [2,5],\r\n        \"tagIds\": [1,3]\r\n    }",
        "requestBody": {
          "description": "Задание",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Task"
        ],
        "summary": "Удаление существующего задания",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id задания",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Task/{id}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Получение задания по его id",
        "description": "Пример запроса:\r\n            \r\n    GET /Todo\r\n    {\r\n       \"id\" : 3\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id задания",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TaskFile/upload": {
      "post": {
        "tags": [
          "TaskFile"
        ],
        "summary": "Выгрузка на сервер нового файла задания",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n        \"taskId\": 1,\r\n        \"file\": \"[бинарные данные файла]\"\r\n    }",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "TaskId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "File": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "TaskId": {
                  "style": "form"
                },
                "File": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UploadTaskFileResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadTaskFileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadTaskFileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/TaskFile/task/{taskId}": {
      "get": {
        "tags": [
          "TaskFile"
        ],
        "summary": "Получение списка файлов по id задания",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Id задания",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskFileResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskFileResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskFileResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/TaskFile/{id}": {
      "get": {
        "tags": [
          "TaskFile"
        ],
        "summary": "Получение файла задания по его id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id файла задания",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFileResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFileResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TaskFile"
        ],
        "summary": "Удаление существующего файла задания по его id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id файла задания",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TaskFile/{id}/download": {
      "get": {
        "tags": [
          "TaskFile"
        ],
        "summary": "Загрузка файла задания с сервера",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id файла задания",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TaskType": {
      "get": {
        "tags": [
          "TaskType"
        ],
        "summary": "Получение списка всех типов заданий",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "TaskType"
        ],
        "summary": "Добавление нового типа заданий",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n        \"name\": \"Домашнее задание\"\r\n    }",
        "requestBody": {
          "description": "Тип заданий",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskTypeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskTypeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskTypeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "TaskType"
        ],
        "summary": "Изменение существующего типа заданий",
        "description": "Пример запроса:\r\n            \r\n    PUT /Todo\r\n    {\r\n        \"id\": 3,\r\n        \"name\": \"Самостоятельная работа\"\r\n    }",
        "requestBody": {
          "description": "Тип заданий",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskTypeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskTypeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskTypeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "TaskType"
        ],
        "summary": "Удаление существующего типа заданий",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id типа заданий",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Получение пользователя по его id",
        "description": "Пример запроса:\r\n            \r\n    GET /Todo\r\n    {\r\n       \"id\" : 3\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id пользователя",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Добавление нового пользователя",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n        \"userName\": \"newUser1234\",\r\n        \"email\": \"youremail@gmail.com\",\r\n        \"password\": \"password1234\",\r\n        \"roleId\": 3,\r\n    }",
        "requestBody": {
          "description": "Пользователь",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Изменение существующего пользователя",
        "description": "Пример запроса:\r\n            \r\n    PUT /Todo\r\n    {\r\n        \"id\": 2,\r\n        \"userName\": \"newUser1234\",\r\n        \"email\": \"youremail@gmail.com\",\r\n        \"password\": \"password1234\",\r\n        \"roleId\": 3,\r\n    }",
        "requestBody": {
          "description": "Пользователь",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Удаление существующего пользователя",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id пользователя",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateAcademicYearRequest": {
        "type": "object",
        "properties": {
          "yearLabel": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAuthorRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateRoleRequest": {
        "type": "object",
        "properties": {
          "roleName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateSolutionRequest": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "solutionText": {
            "type": "string",
            "nullable": true
          },
          "userAddedId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateSubjectRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateTagRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateTaskRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "conditionText": {
            "type": "string",
            "nullable": true
          },
          "subjectId": {
            "type": "integer",
            "format": "int32"
          },
          "academicYearId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "typeId": {
            "type": "integer",
            "format": "int32"
          },
          "userAddedId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "authorIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "tagIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateTaskTypeRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SolutionFileResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "solutionId": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "fileUrl": {
            "type": "string",
            "nullable": true
          },
          "fileSize": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "TaskFileResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "fileUrl": {
            "type": "string",
            "nullable": true
          },
          "fileSize": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "UpdateAcademicYearRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "yearLabel": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAuthorRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateRoleRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "roleName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateSolutionRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "solutionText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateSubjectRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTagRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTaskRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "conditionText": {
            "type": "string",
            "nullable": true
          },
          "subjectId": {
            "type": "integer",
            "format": "int32"
          },
          "academicYearId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "typeId": {
            "type": "integer",
            "format": "int32"
          },
          "authorIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "tagIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTaskTypeRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UploadSolutionFileResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "fileUrl": {
            "type": "string",
            "nullable": true
          },
          "fileSize": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "UploadTaskFileResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "fileUrl": {
            "type": "string",
            "nullable": true
          },
          "fileSize": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      }
    }
  }
}