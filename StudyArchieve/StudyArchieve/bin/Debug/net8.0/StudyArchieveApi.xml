<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StudyArchieveApi</name>
    </assembly>
    <members>
        <member name="M:StudyArchieveApi.Controllers.AcademicYearController.GetAll">
            <summary>
            Получение списка всех учебных лет
            </summary>
            <returns>Список всех учебных лет</returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.AcademicYearController.Add(StudyArchieveApi.Contracts.AcademicYear.CreateAcademicYearRequest)">
             <summary>
             Добавление нового учебного года
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                     "yearLabel": "2026-2027"
                 }
            
             </remarks>
             <param name="academicYear">Учебный год</param>
             <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.AcademicYearController.Update(StudyArchieveApi.Contracts.AcademicYear.UpdateAcademicYearRequest)">
             <summary>
             Изменение существующего учебного года
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                     "id": 3,
                     "yearLabel": "2026-2027"
                 }
            
             </remarks>
             <param name="academicYear">Учебный год</param>
             <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.AcademicYearController.Delete(System.Int32)">
            <summary>
            Удаление существующего учебного года
            </summary>
            <param name="id">Id учебного года</param>
            <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.AuthorController.GetAll">
            <summary>
            Получение списка всех авторов заданий
            </summary>
            <returns>Список всех авторов заданий</returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.AuthorController.Add(StudyArchieveApi.Contracts.Author.CreateAuthorRequest)">
             <summary>
             Добавление нового автора заданий
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                     "name": "Ларионов Дмитрий Ильич"
                 }
            
             </remarks>
             <param name="author">Автор заданий</param>
             <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.AuthorController.Update(StudyArchieveApi.Contracts.Author.UpdateAuthorRequest)">
             <summary>
             Изменение существующего автора заданий
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                     "id": 1,
                     "name": "Ларионов Дмитрий Ильич"
                 }
            
             </remarks>
             <param name="author">Автор заданий</param>
             <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.AuthorController.Delete(System.Int32)">
            <summary>
            Удаление существующего автора заданий
            </summary>
            <param name="id">Id автора заданий</param>
            <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.RoleController.GetAll">
            <summary>
            Получение списка всех пользовательских ролей
            </summary>
            <returns>Список всех пользовательских ролей</returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.RoleController.Add(StudyArchieveApi.Contracts.Role.CreateRoleRequest)">
             <summary>
             Добавление новой пользовательской роли
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                     "roleName": "Модератор"
                 }
            
             </remarks>
             <param name="role">Роль пользователей</param>
             <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.RoleController.Update(StudyArchieveApi.Contracts.Role.UpdateRoleRequest)">
             <summary>
             Изменение существующей пользовательской роли
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                     "id": 1,
                     "roleName": "Модератор"
                 }
            
             </remarks>
             <param name="role">Роль пользователей</param>
             <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.RoleController.Delete(System.Int32)">
            <summary>
            Удаление существующей пользовательской роли
            </summary>
            <param name="id">Id пользовательской роли</param>
            <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.SolutionController.GetByTaskId(System.Int32)">
             <summary>
             Получение списка решений по id задания
             </summary>
             <remarks>
             Пример запроса:
            
                 GET /Todo
                 {
                    "taskId" : 3
                 }
            
             </remarks>
             <param name="taskId">Id задания</param>
             <returns>Список решений задания</returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.SolutionController.Add(StudyArchieveApi.Contracts.Solution.CreateSolutionRequest)">
             <summary>
             Добавление нового решения
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                     "taskId": 2,
                     "solutionText": "Решения нет, это задача-подвох",
                     "userAddedId": 1
                 }
            
             </remarks>
             <param name="solution">Решение</param>
             <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.SolutionController.Update(StudyArchieveApi.Contracts.Solution.UpdateSolutionRequest)">
             <summary>
             Изменение существующего решения
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                     "id": 1,
                     "solutionText": "Решения нет, это задача-подвох"
                 }
            
             </remarks>
             <param name="solution">Решение</param>
             <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.SolutionController.Delete(System.Int32)">
            <summary>
            Удаление существующего решения
            </summary>
            <param name="id">Id решения</param>
            <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.SubjectController.GetAll">
            <summary>
            Получение списка всех учебных дисциплин
            </summary>
            <returns>Список всех учебных дисциплин</returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.SubjectController.Add(StudyArchieveApi.Contracts.Subject.CreateSubjectRequest)">
             <summary>
             Добавление новой учебной дисциплины
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                     "name": "Дискретная математика"
                 }
            
             </remarks>
             <param name="subject">Учебная дисциплина</param>
             <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.SubjectController.Update(StudyArchieveApi.Contracts.Subject.UpdateSubjectRequest)">
             <summary>
             Изменение существующей учебной дисциплины
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                     "id": 1,
                     "name": "Теория вероятностей"
                 }
            
             </remarks>
             <param name="subject">Учебная дисциплина</param>
             <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.SubjectController.Delete(System.Int32)">
            <summary>
            Удаление существующей учебной дисциплины
            </summary>
            <param name="id">Id учебной дисциплины</param>
            <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.TagController.GetAll">
            <summary>
            Получение списка всех тэгов
            </summary>
            <returns>Список всех тэгов</returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.TagController.Add(StudyArchieveApi.Contracts.Tag.CreateTagRequest)">
             <summary>
             Добавление нового тэга
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                     "name": "MS SQL Server"
                 }
            
             </remarks>
             <param name="tag">Тэг</param>
             <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.TagController.Update(StudyArchieveApi.Contracts.Tag.UpdateTagRequest)">
             <summary>
             Изменение существующего тэга
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                     "id": 3,
                     "name": "Regex"
                 }
            
             </remarks>
             <param name="tag">Тэг</param>
             <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.TagController.Delete(System.Int32)">
            <summary>
            Удаление существующего тэга
            </summary>
            <param name="id">Id тэга</param>
            <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.TaskController.GetByFilter(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32[],System.Int32[])">
             <summary>
             Получение списка заданий по условию
             </summary>
             <remarks>
             Пример запроса:
            
                 GET /Todo
                 {
                    "subjectId" : 3,
                    "academicYearId" : 2,
                    "typeId" : 1,
                    "authorIds" : [1, 2],
                    "tagIds" : [2, 4, 5]
                 }
            
             </remarks>
             <param name="subjectId">Id учебной дисциплины</param>
             <param name="academicYearId">Id учебного года</param>
             <param name="typeId">Id типа задания</param>
             <param name="authorIds">Набор id авторов задания</param>
             <param name="tagIds">Набор id тэгов</param>
             <returns>Список заданий, удовлетворяющих условию поиска</returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.TaskController.GetById(System.Int32)">
             <summary>
             Получение задания по его id
             </summary>
             <remarks>
             Пример запроса:
            
                 GET /Todo
                 {
                    "id" : 3
                 }
            
             </remarks>
             <param name="id">Id задания</param>
             <returns>Задание</returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.TaskController.Add(StudyArchieveApi.Contracts.Task.CreateTaskRequest)">
             <summary>
             Добавление нового задания
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                     "title": "Новое задание",
                     "conditionText": "Содержание задания",
                     "subjectId" : 3,
                     "academicYearId" : 2,
                     "typeId" : 1,
                     "userAddedId": 1,
                     "authorIds" : [2,5],
                     "tagIds": [1,3]
                 }
            
             </remarks>
             <param name="task">Задание</param>
             <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.TaskController.Update(StudyArchieveApi.Contracts.Task.UpdateTaskRequest)">
             <summary>
             Изменение существующего задания
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                     "id": 1,
                     "title": "Новое задание",
                     "conditionText": "Содержание задания",
                     "subjectId" : 3,
                     "academicYearId" : 2,
                     "typeId" : 1,
                     "authorIds" : [2,5],
                     "tagIds": [1,3]
                 }
            
             </remarks>
             <param name="task">Задание</param>
             <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.TaskController.Delete(System.Int32)">
            <summary>
            Удаление существующего задания
            </summary>
            <param name="id">Id задания</param>
            <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.TaskTypeController.GetAll">
            <summary>
            Получение списка всех типов заданий
            </summary>
            <returns>Список всех типов заданий</returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.TaskTypeController.Add(StudyArchieveApi.Contracts.TaskType.CreateTaskTypeRequest)">
             <summary>
             Добавление нового типа заданий
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                     "name": "Домашнее задание"
                 }
            
             </remarks>
             <param name="taskType">Тип заданий</param>
             <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.TaskTypeController.Update(StudyArchieveApi.Contracts.TaskType.UpdateTaskTypeRequest)">
             <summary>
             Изменение существующего типа заданий
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                     "id": 3,
                     "name": "Самостоятельная работа"
                 }
            
             </remarks>
             <param name="taskType">Тип заданий</param>
             <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.TaskTypeController.Delete(System.Int32)">
            <summary>
            Удаление существующего типа заданий
            </summary>
            <param name="id">Id типа заданий</param>
            <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.UserController.GetById(System.Int32)">
             <summary>
             Получение пользователя по его id
             </summary>
             <remarks>
             Пример запроса:
            
                 GET /Todo
                 {
                    "id" : 3
                 }
            
             </remarks>
             <param name="id">Id пользователя</param>
             <returns>Пользователь</returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.UserController.Add(StudyArchieveApi.Contracts.User.CreateUserRequest)">
             <summary>
             Добавление нового пользователя
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                     "userName": "newUser1234",
                     "email": "youremail@gmail.com",
                     "password": "password1234",
                     "roleId": 3,
                 }
            
             </remarks>
             <param name="user">Пользователь</param>
             <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.UserController.Update(StudyArchieveApi.Contracts.User.UpdateUserRequest)">
             <summary>
             Изменение существующего пользователя
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                     "id": 2,
                     "userName": "newUser1234",
                     "email": "youremail@gmail.com",
                     "password": "password1234",
                     "roleId": 3,
                 }
            
             </remarks>
             <param name="user">Пользователь</param>
             <returns></returns>
        </member>
        <member name="M:StudyArchieveApi.Controllers.UserController.Delete(System.Int32)">
            <summary>
            Удаление существующего пользователя
            </summary>
            <param name="id">Id пользователя</param>
            <returns></returns>
        </member>
    </members>
</doc>
